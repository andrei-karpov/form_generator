
#Область ПрограммныйИнтерфейс 

#Область Основная

Функция Версия() Экспорт
	
	СписокРасширений = РасширенияКонфигурации.Получить(Новый Структура("Имя", "KSOFT_ГенерацияФорм"));
	Если НЕ СписокРасширений.Количество() Тогда
		Возврат "0.0.0.0"
	КонецЕсли; 
	Возврат СписокРасширений [0].Версия;
	
КонецФункции
 
#КонецОбласти 

#Область ПараметрыЭлементовФормы

Функция КнопкаФормы(ИмяЭлемента, ИмяКоманды, Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлемента, Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("КнопкаФормы");
	ОсновныеПараметры.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	ОсновныеПараметры.Вставить("ИмяКоманды", ИмяКоманды);
	
	Возврат ОсновныеПараметры;
	
КонецФункции

Функция КнопкаКоманднойПанели(ИмяЭлемента, ИмяКоманды, Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлемента, Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("КнопкаФормы");
	ОсновныеПараметры.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	ОсновныеПараметры.Вставить("ИмяКоманды", ИмяКоманды);
	
	Возврат ОсновныеПараметры;
	
КонецФункции

Функция ДекорацияФормы(ИмяЭлемента, Заголовок = "", Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлемента, Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("ДекорацияФормы");
	ОсновныеПараметры.Вид = ВидДекорацииФормы.Надпись;
	ОсновныеПараметры.Заголовок = Заголовок;
	
	Возврат ОсновныеПараметры;
	
КонецФункции

Функция ПолеВвода(ПутьКДанным, Родитель = "") Экспорт    
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлементаДляФормы(ПутьКДанным), Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("ПолеФормы");
	ОсновныеПараметры.Вид = ВидПоляФормы.ПолеВвода;
	ОсновныеПараметры.Вставить("ПутьКДанным", ПутьКДанным);
	
	Возврат ОсновныеПараметры;
	
КонецФункции

Функция ПолеПереключателя(ПутьКДанным, Родитель = "", СписокВыбора = Неопределено) Экспорт    
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлементаДляФормы(ПутьКДанным), Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("ПолеФормы");
	ОсновныеПараметры.Вид = ВидПоляФормы.ПолеПереключателя;
	ОсновныеПараметры.Вставить("ВидПереключателя",	ВидПереключателя.Переключатель);
	ОсновныеПараметры.Вставить("ПутьКДанным", ПутьКДанным);
	Если СписокВыбора = Неопределено Тогда
		СписокВыбора = Новый СписокЗначений;
	КонецЕсли; 
	ОсновныеПараметры.Вставить("СписокВыбора", СписокВыбора);
	
	Возврат ОсновныеПараметры;
	
КонецФункции

Функция ТаблицаФормы(ПутьКДанным, Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлементаДляФормы(ПутьКДанным), Родитель);  
	ОсновныеПараметры.ТипЭлемента = Тип("ТаблицаФормы");
	
	ДополнительныеПараметрыЭлемента = Новый Структура("ПутьКДанным, ПоложениеЗаголовка, Колонки");
	ДополнительныеПараметрыЭлемента.ПутьКДанным = ПутьКДанным;
	ДополнительныеПараметрыЭлемента.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ДополнительныеПараметрыЭлемента.Колонки = Новый Массив;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ОсновныеПараметры, ДополнительныеПараметрыЭлемента);
	
	Возврат ОсновныеПараметры;  
	
КонецФункции

Функция ПолеНадписи(ИмяЭлемента, Заголовок = "", Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлемента, Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("ПолеФормы");
	ОсновныеПараметры.Вид = ВидПоляФормы.ПолеНадписи;
	ОсновныеПараметры.Заголовок = Заголовок;
	
	Возврат ОсновныеПараметры;  
	
КонецФункции

Функция ПолеФлажка(ПутьКДанным, Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлементаДляФормы(ПутьКДанным), Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("ПолеФормы");
	ОсновныеПараметры.Вид = ВидПоляФормы.ПолеФлажка;
	ОсновныеПараметры.Вставить("ПутьКДанным", ПутьКДанным);
	ОсновныеПараметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Право);
	
	Возврат ОсновныеПараметры;
	
КонецФункции

Функция ОбычнаяГруппа(ИмяЭлемента, Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлемента, Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("ГруппаФормы");
	ОсновныеПараметры.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ОсновныеПараметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
	ОсновныеПараметры.Вставить("ОтображатьЗаголовок", Ложь);
	
	Возврат ОсновныеПараметры;
	
КонецФункции

Функция ГруппаКолонок(ИмяЭлемента, Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлемента, Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("ГруппаФормы");
	ОсновныеПараметры.Вид = ВидГруппыФормы.ГруппаКолонок;
	ОсновныеПараметры.Вставить("Группировка", ГруппировкаКолонок.Горизонтальная);
	
	Возврат ОсновныеПараметры;
	
КонецФункции

Функция Страница(ИмяЭлемента, Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлемента, Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("ГруппаФормы");
	ОсновныеПараметры.Вид = ВидГруппыФормы.Страница;
	
	Возврат ОсновныеПараметры;
	
КонецФункции

Функция Подменю(ИмяЭлемента, Родитель = "") Экспорт
	
	ОсновныеПараметры = ОсновныеПараметрыЭлементовФормы(ИмяЭлемента, Родитель);
	ОсновныеПараметры.ТипЭлемента = Тип("ГруппаФормы");
	ОсновныеПараметры.Вид = ВидГруппыФормы.Подменю;
	Возврат ОсновныеПараметры;
	
КонецФункции

#КонецОбласти 

#Область КомандыФормы

Функция КомандаФормы(ИмяКоманды, Заголовок = "", ИмяДействия = "") Экспорт
	
	ПараметрыКомандыФормы = Новый Структура;
	ПараметрыКомандыФормы.Вставить("Имя", ИмяКоманды);
	ПараметрыКомандыФормы.Вставить("Заголовок", Заголовок);
	Если ЗначениеЗаполнено(ИмяДействия) Тогда
		ПараметрыКомандыФормы.Вставить("Действие", ИмяДействия);
	Иначе
		ПараметрыКомандыФормы.Вставить("Действие", ИмяКоманды);
	КонецЕсли; 	
	ПараметрыКомандыФормы.Вставить("ИспользованиеТекущейСтроки", Неопределено);
	ПараметрыКомандыФормы.Вставить("ИзменяетСохраняемыеДанные", Ложь);
	ПараметрыКомандыФормы.Вставить("Подсказка", "");
	ПараметрыКомандыФормы.Вставить("Отображение", Неопределено);
	ПараметрыКомандыФормы.Вставить("Картинка", Неопределено);
	ПараметрыКомандыФормы.Вставить("СочетаниеКлавиш", Неопределено);
	ПараметрыКомандыФормы.Вставить("ИспользуемаяТаблица", Неопределено);
	
	Возврат ПараметрыКомандыФормы;
	
КонецФункции
 
Функция ДобавитьКомандуНаФорму(Форма, Параметры) Экспорт
	
	КомандаФормы = Форма.Команды.Найти(Параметры.Имя);
	Если КомандаФормы <> Неопределено Тогда
		Возврат КомандаФормы;
	КонецЕсли;
	
	КомандаФормы = Форма.Команды.Добавить(Параметры.Имя);
	КомандаФормы.Действие = Параметры.Действие; 
	КомандаФормы.Заголовок = Параметры.Заголовок;
	
	Если Параметры.Свойство("ИспользованиеТекущейСтроки") И Параметры.ИспользованиеТекущейСтроки <> Неопределено Тогда
		КомандаФормы.ИспользованиеТекущейСтроки = Параметры.ИспользованиеТекущейСтроки;	
	КонецЕсли; 
	Если Параметры.Свойство("ИзменяетСохраняемыеДанные") И Параметры.ИзменяетСохраняемыеДанные <> Неопределено Тогда
		КомандаФормы.ИзменяетСохраняемыеДанные = Параметры.ИзменяетСохраняемыеДанные;	
	КонецЕсли; 
	
	Если Параметры.Свойство("Подсказка") И ЗначениеЗаполнено(Параметры.Подсказка) Тогда
		КомандаФормы.Подсказка = Параметры.Подсказка;	
	КонецЕсли; 
	
	Если Параметры.Свойство("Отображение") И Параметры.Отображение <> Неопределено Тогда
		КомандаФормы.Отображение = Параметры.Отображение;	
	КонецЕсли; 
	
	Если Параметры.Свойство("Картинка") И Параметры.Картинка <> Неопределено Тогда
		КомандаФормы.Картинка = Параметры.Картинка;	
	КонецЕсли; 
	
	Если Параметры.Свойство("ИспользуемаяТаблица") И Параметры.ИспользуемаяТаблица <> Неопределено Тогда
		КомандаФормы.ИспользуемаяТаблица = Параметры.ИспользуемаяТаблица;	
	КонецЕсли; 
	
	Если Параметры.Свойство("СочетаниеКлавиш") И Параметры.СочетаниеКлавиш <> Неопределено Тогда
		КомандаФормы.СочетаниеКлавиш = Параметры.СочетаниеКлавиш;	
	КонецЕсли; 
		
	
	Возврат КомандаФормы;
	
КонецФункции

#КонецОбласти 

#Область РеквизитыФормы

Функция РеквизитыФормыПоТаблицеЗначений(ИмяОбъекта, ТаблицаОбъекта, Заголовок = "", СохраняемыеДанные = Ложь) Экспорт 
	Возврат РеквизитыФормыПоКоллекцииЗначений(ИмяОбъекта, ТаблицаОбъекта, Тип("ТаблицаЗначений"), Заголовок, СохраняемыеДанные);  
КонецФункции

Функция РеквизитыФормыПоКоллекцииЗначений(ИмяОбъекта, КоллекцииЗначенийОбъекта, ТипКоллекции, Заголовок = "", СохраняемыеДанные = Ложь) Экспорт 
	
	СписокРеквизитовФормы = Новый Массив;  
	ОписаниеТипаКоллекции = Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипКоллекции));
	СписокРеквизитовФормы.Добавить(Новый РеквизитФормы(ИмяОбъекта, ОписаниеТипаКоллекции, ,Заголовок, СохраняемыеДанные));
	
	Для Каждого Колонка Из КоллекцииЗначенийОбъекта.Колонки Цикл
		СписокРеквизитовФормы.Добавить(Новый РеквизитФормы(Колонка.Имя, Новый ОписаниеТипов(Колонка.ТипЗначения,, "NULL"), ИмяОбъекта, Колонка.Заголовок));
	КонецЦикла;
	
	Возврат СписокРеквизитовФормы;
	
КонецФункции

Процедура ДобавитьРеквизитыФормы(Форма, Знач СписокДобавляемыхРеквизитов, Знач СписокУдаляемыхРеквизитов = Неопределено) Экспорт
	
	Если НЕ ТипЗнч(СписокДобавляемыхРеквизитов) = Тип("Массив") Тогда
		СписокДобавляемыхРеквизитов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СписокДобавляемыхРеквизитов);  
	КонецЕсли; 
	
	СкорректироватьСписокРеквизитов(Форма, СписокДобавляемыхРеквизитов);
	
	Если Не СписокУдаляемыхРеквизитов = Неопределено Тогда
		СкорректироватьСписокРеквизитов(Форма, СписокУдаляемыхРеквизитов, Ложь);
		Форма.ИзменитьРеквизиты(СписокДобавляемыхРеквизитов, СписокУдаляемыхРеквизитов);
	Иначе
		Форма.ИзменитьРеквизиты(СписокДобавляемыхРеквизитов);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 

#Область РаботаСЭлементамиФормы

Функция ДобавитьЭлементНаФорму(Форма, Параметры) Экспорт
	
	Если НЕ Параметры.Свойство("Родитель") ИЛИ НЕ ЗначениеЗаполнено(Параметры.Родитель) Тогда
		Родитель = "";
	Иначе
		Родитель = Параметры.Родитель;
	КонецЕсли;
	
	РодительЭлемента = ЭлементФормыПоИмени(Форма, Родитель);
	ЭлементПосле = ЭлементФормыПоИмени(Форма, Параметры.ЭлементПосле);
	
	ДобавляемыйЭлемент = ЭлементФормыПоИмени(Форма, Параметры.Имя);
	Если ДобавляемыйЭлемент <> Неопределено Тогда
		Возврат ДобавляемыйЭлемент;
	КонецЕсли;
	
	ДобавляемыйЭлемент = Форма.Элементы.Вставить(Параметры.Имя, Параметры.ТипЭлемента, РодительЭлемента, ЭлементПосле);	
	
	СписокПолейИсключений = Новый Массив;
	СписокПолейИсключений.Добавить("Имя");
	СписокПолейИсключений.Добавить("ЭлементПосле");
	СписокПолейИсключений.Добавить("Родитель");
	СписокПолейИсключений.Добавить("События");
	СписокПолейИсключений.Добавить("ТипЭлемента");
	СписокПолейИсключений.Добавить("СписокВыбора");
	СписокПолейИсключений.Добавить("Колонки");
	СписокПолейИсключений.Добавить("ПутьКДанным");
	СписокПолейИсключений.Добавить("Вид");
	
	Попытка
		Если Параметры.Свойство("Вид") И Параметры.Вид <> Неопределено Тогда
			ДобавляемыйЭлемент.Вид = Параметры.Вид; 
		КонецЕсли; 
		
		Если Параметры.Свойство("ПутьКДанным") И ЗначениеЗаполнено(Параметры.ПутьКДанным) Тогда
			ДобавляемыйЭлемент.ПутьКДанным = Параметры.ПутьКДанным; 
		КонецЕсли; 
	Исключение
	КонецПопытки;
	
	Для Каждого ПараметрЭлемента Из Параметры Цикл
		
		Если СписокПолейИсключений.Найти(ПараметрЭлемента.Ключ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПараметрЭлемента.Ключ = "Заголовок" И НЕ ЗначениеЗаполнено(ПараметрЭлемента.Значение) Тогда
			Продолжить;
		КонецЕсли;   
		
		Попытка
			ДобавляемыйЭлемент [ПараметрЭлемента.Ключ] = ПараметрЭлемента.Значение; 
		Исключение
		КонецПопытки;
		
	КонецЦикла; 
	
	Если Параметры.Свойство("СписокВыбора") Тогда
		ДобавляемыйЭлемент.СписокВыбора.Очистить();
		Для Каждого Элемент Из Параметры.СписокВыбора Цикл   
			ДобавляемыйЭлемент.СписокВыбора.Добавить(Элемент.Значение, Элемент.Представление);
		КонецЦикла; 
	КонецЕсли; 
	
	Если Параметры.Свойство("События") Тогда
		Для Каждого СобытиеЭлемента Из Параметры.События Цикл
			ДобавляемыйЭлемент.УстановитьДействие(СобытиеЭлемента.Ключ, СобытиеЭлемента.Значение);
		КонецЦикла; 
	КонецЕсли; 
	
	Если Параметры.Свойство("Колонки") Тогда
		Для Каждого ЭлементКолонки Из Параметры.Колонки Цикл
			ЭлементКолонки.Родитель = Параметры.Имя;
			ЭлементКолонки.ПутьКДанным = Параметры.ПутьКДанным + "." + ЭлементКолонки.ПутьКДанным;
			ЭлементКолонки.Имя = ИмяЭлементаДляФормы(ЭлементКолонки.ПутьКДанным);
			ДобавитьЭлементНаФорму(Форма, ЭлементКолонки);
		КонецЦикла;     
	КонецЕсли; 
	
	Возврат ДобавляемыйЭлемент;
	
КонецФункции

Функция СкопироватьЭлементФормы(Форма, ИсходныйЭлемент, ИмяНовогоЭлемента, Родитель = "") Экспорт
	
	НовыйЭлемент = Форма.Элементы.Найти(ИмяНовогоЭлемента);
	Если НовыйЭлемент <> Неопределено Тогда // ЭЛЕМЕНТ УЖЕ ЕСТЬ
		Возврат НовыйЭлемент;
	КонецЕсли; 
	
	ПараметрыНовогоЭлемента = ОсновныеПараметрыЭлементовФормы(ИмяНовогоЭлемента, Родитель);
	ЗаполнитьЗначенияСвойств(ПараметрыНовогоЭлемента, ИсходныйЭлемент, , "Имя, Родитель");
	ПараметрыНовогоЭлемента.ТипЭлемента = ТипЗнч(ИсходныйЭлемент); 
	
	НовыйЭлемент = ДобавитьЭлементНаФорму(Форма, ПараметрыНовогоЭлемента);
	ПоляИсключения = "Вид, Имя, Родитель";
	
	Если ПараметрыНовогоЭлемента.Вид = ВидГруппыФормы.Страница Тогда
		ПоляИсключения = ПоляИсключения + ", ПутьКДаннымЗаголовка";		
	КонецЕсли; 
	
	ЗаполнитьЗначенияСвойств(НовыйЭлемент, ИсходныйЭлемент, , ПоляИсключения);
	
	Возврат НовыйЭлемент;
	
КонецФункции

Процедура УдалитьПодчиненныеЭлементы(Форма, ИсходныйЭлемент) Экспорт
	СписокПодчиненных = СписокПодчиненныхЭлементов(ИсходныйЭлемент);
	УдалитьЭлементыФормы(Форма, СписокПодчиненных);
КонецПроцедуры

Процедура УдалитьЭлементыФормы(Форма, СписокЭлементовДляУдаления) Экспорт
	
	Для Каждого ЭлементФормы Из СписокЭлементовДляУдаления Цикл
		Форма.Элементы.Удалить(ЭлементФормы);	
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПереместитьЭлемент(Форма, ИмяЭлемента, Родитель = "", ИмяЭлементПосле = "") Экспорт
	
	ЭлементДляПеремещения = ЭлементФормыПоИмени(Форма, ИмяЭлемента);
	РодительЭлемента = ЭлементФормыПоИмени(Форма, Родитель);
	ЭлементПосле = ЭлементФормыПоИмени(Форма, ИмяЭлементПосле);
	
	Если РодительЭлемента = Неопределено Тогда
		Форма.Элементы.Переместить(ЭлементДляПеремещения, Форма, ЭлементПосле);
	Иначе
		Форма.Элементы.Переместить(ЭлементДляПеремещения, РодительЭлемента, ЭлементПосле);
	КонецЕсли; 
	
	
КонецПроцедуры

#КонецОбласти 

#Область УсловноеОформление

Процедура ДобавитьОтборУО(пЭлементУО, пПоле, пВидСравнения, пЗначение) Экспорт
	ЭлементОтбора = пЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(пПоле); // имя поля
	ЭлементОтбора.ВидСравнения = пВидСравнения; 
	ЭлементОтбора.ПравоеЗначение = пЗначение;
	ЭлементОтбора.Использование = Истина;
КонецПроцедуры

Процедура ДобавитьОформлениеУО(пЭлементУО, пПоле, пЗначение) Экспорт
	пЭлементУО.Оформление.УстановитьЗначениеПараметра(пПоле, пЗначение);
КонецПроцедуры

Процедура ДобавитьОформляемоеПоле(пЭлементУО, пПоле) Экспорт
	ПолеОформления = пЭлементУО.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(пПоле);
	ПолеОформления.Использование = Истина;
КонецПроцедуры

#КонецОбласти

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ИмяЭлементаДляФормы(ПутьКДанным)
	Возврат СтрЗаменить(СтрЗаменить(ПутьКДанным, "Объект.", ""), ".", "");
КонецФункции

Функция СписокПодчиненныхЭлементов(ЭлементФормы)
	СписокПодчиненных = Новый Массив;
	Если ЕстьРеквизитПодчиненныеЭлементы(ЭлементФормы) Тогда
		Для Каждого ПодчиненныйЭлемент Из ЭлементФормы.ПодчиненныеЭлементы Цикл
			СписокПодчиненных.Добавить(ПодчиненныйЭлемент);
			СписокВложенныхПодчиненных = СписокПодчиненныхЭлементов(ПодчиненныйЭлемент);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СписокПодчиненных, СписокВложенныхПодчиненных);
		КонецЦикла; 	
	КонецЕсли; 
	Возврат СписокПодчиненных;		
КонецФункции
 
Функция ЕстьРеквизитПодчиненныеЭлементы(ЭлементФормы)
	Возврат ТипЗнч(ЭлементФормы) = Тип("ГруппаФормы") 
	ИЛИ ТипЗнч(ЭлементФормы) = Тип("ПолеФормы");
КонецФункции

Функция ЭлементФормыПоИмени(Форма, ИмяЭлемента)
	
	Если НЕ ЗначениеЗаполнено(ИмяЭлемента) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Найти(ИмяЭлемента, ".") = 0 Тогда
		Возврат Форма.Элементы.Найти(ИмяЭлемента);
	КонецЕсли;
	
	ДанныеЭлемента = СтрРазделить(ИмяЭлемента, ".");
	Элемент = Форма.Элементы.Найти(ДанныеЭлемента[0]);
	Если Элемент <> Неопределено Тогда
		Элемент = Элемент [ДанныеЭлемента[1]];
	КонецЕсли;
	
	Возврат Элемент;
	
КонецФункции

Процедура СкорректироватьСписокРеквизитов(Форма, ПроверяемыеРеквизиты, Добавление = Истина)
	
	КэшРеквизитовФормы = Новый Соответствие;
	ИсключаемыеРеквизиты = Новый Массив;
	
	СписокРеквизитов = Новый СписокЗначений;
	СписокРеквизитов.ЗагрузитьЗначения(ПроверяемыеРеквизиты);
	Для Каждого Реквизит Из СписокРеквизитов Цикл
		РеквизитыФормы = КэшРеквизитовФормы.Получить(Реквизит.Значение.Путь);
		Если РеквизитыФормы = Неопределено Тогда
			Если ЗначениеЗаполнено(Реквизит.Значение.Путь) Тогда
				Для Каждого ПроверяемыеРеквизит Из ПроверяемыеРеквизиты Цикл
					Если ПроверяемыеРеквизит.Имя = Реквизит.Значение.Путь Тогда //Это таблица
						Если Добавление Тогда
							РеквизитыФормы = Новый Массив;
						Иначе
							РеквизитыФормы = ПроверяемыеРеквизиты;
						КонецЕсли; 
						КэшРеквизитовФормы.Вставить(Реквизит.Значение.Путь, РеквизитыФормы);
						Прервать;
					КонецЕсли;  
				КонецЦикла; 
			КонецЕсли;
			Если РеквизитыФормы = Неопределено Тогда
				РеквизитыФормы = Форма.ПолучитьРеквизиты(Реквизит.Значение.Путь);
				КэшРеквизитовФормы.Вставить(Реквизит.Значение.Путь, РеквизитыФормы);
			КонецЕсли; 
		КонецЕсли;
		РеквизитНайден = Ложь;
		Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
			Если РеквизитФормы.Имя = Реквизит.Значение.Имя Тогда
				РеквизитНайден = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Добавление И РеквизитНайден Тогда
			ИсключаемыеРеквизиты.Добавить(Реквизит);
		ИначеЕсли Не Добавление И Не РеквизитНайден Тогда
			ИсключаемыеРеквизиты.Добавить(Реквизит);      
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Реквизит Из ИсключаемыеРеквизиты Цикл
		СписокРеквизитов.Удалить(Реквизит);
	КонецЦикла;
	
	ПроверяемыеРеквизиты = СписокРеквизитов.ВыгрузитьЗначения();
	
КонецПроцедуры

Функция ОсновныеПараметрыЭлементовФормы(Имя, Родитель = "")
	
	ОсновныеПараметрыЭлементовФормы = Новый Структура("Имя, ТипЭлемента, Вид, Родитель, Заголовок, ЭлементПосле, События");
	ОсновныеПараметрыЭлементовФормы.Имя = Имя;
	ОсновныеПараметрыЭлементовФормы.Родитель = Родитель;
	ОсновныеПараметрыЭлементовФормы.ЭлементПосле = "";
	ОсновныеПараметрыЭлементовФормы.События = Новый Структура;
	ОсновныеПараметрыЭлементовФормы.Заголовок = "";
	
	Возврат ОсновныеПараметрыЭлементовФормы;
	
КонецФункции

#КонецОбласти 
